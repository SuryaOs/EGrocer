// <auto-generated />
using EGrocer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EGrocer.Infrastructure.Migrations
{
    [DbContext(typeof(GrocerDbContext))]
    [Migration("20230604135804_InitialSetupAndAddedProductCategoryTablesWithData")]
    partial class InitialSetupAndAddedProductCategoryTablesWithData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EGrocer.Core.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Beverage you for quick energy",
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fruits and Veggies",
                            Name = "Fruits and Vegetables"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Breakfas and Cereals in 5 Minutes",
                            Name = "Breakfasts and Cereals"
                        });
                });

            modelBuilder.Entity("EGrocer.Core.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Beverages one is super healthy drink",
                            Name = "Beverages One",
                            Price = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Apple a day, keeps doctor away",
                            Name = "Apple",
                            Price = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Oats are quickwin for breakfast",
                            Name = "Oats",
                            Price = 25
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Eat Kiwi, Fly Kiwi",
                            Name = "Kiwi",
                            Price = 30
                        });
                });

            modelBuilder.Entity("EGrocer.Core.Products.Product", b =>
                {
                    b.HasOne("EGrocer.Core.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EGrocer.Core.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
